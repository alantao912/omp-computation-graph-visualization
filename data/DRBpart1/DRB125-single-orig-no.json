{
    "edges": [
        {
            "edge_type": 0,
            "hidden": 0,
            "source": 1,
            "target": 2
        },
        {
            "edge_type": 1,
            "hidden": 0,
            "source": 1,
            "target": 3
        },
        {
            "edge_type": 1,
            "hidden": 0,
            "source": 1,
            "target": 4
        },
        {
            "edge_type": 1,
            "hidden": 0,
            "source": 1,
            "target": 5
        },
        {
            "edge_type": 1,
            "hidden": 0,
            "source": 1,
            "target": 6
        },
        {
            "edge_type": 1,
            "hidden": 0,
            "source": 1,
            "target": 7
        },
        {
            "edge_type": 1,
            "hidden": 0,
            "source": 1,
            "target": 8
        },
        {
            "edge_type": 1,
            "hidden": 0,
            "source": 1,
            "target": 9
        },
        {
            "edge_type": 1,
            "hidden": 0,
            "source": 1,
            "target": 10
        },
        {
            "edge_type": 0,
            "hidden": 0,
            "source": 2,
            "target": 27
        },
        {
            "edge_type": 0,
            "hidden": 0,
            "source": 3,
            "target": 14
        },
        {
            "edge_type": 0,
            "hidden": 0,
            "source": 4,
            "target": 11
        },
        {
            "edge_type": 0,
            "hidden": 0,
            "source": 5,
            "target": 13
        },
        {
            "edge_type": 0,
            "hidden": 0,
            "source": 6,
            "target": 16
        },
        {
            "edge_type": 0,
            "hidden": 0,
            "source": 7,
            "target": 17
        },
        {
            "edge_type": 0,
            "hidden": 0,
            "source": 8,
            "target": 15
        },
        {
            "edge_type": 0,
            "hidden": 0,
            "source": 9,
            "target": 18
        },
        {
            "edge_type": 0,
            "hidden": 0,
            "source": 10,
            "target": 12
        },
        {
            "edge_type": 5,
            "hidden": 0,
            "source": 11,
            "target": 14
        },
        {
            "edge_type": 0,
            "hidden": 0,
            "source": 11,
            "target": 25
        },
        {
            "edge_type": 5,
            "hidden": 0,
            "source": 12,
            "target": 14
        },
        {
            "edge_type": 0,
            "hidden": 0,
            "source": 12,
            "target": 23
        },
        {
            "edge_type": 5,
            "hidden": 0,
            "source": 13,
            "target": 14
        },
        {
            "edge_type": 0,
            "hidden": 0,
            "source": 13,
            "target": 24
        },
        {
            "edge_type": 0,
            "hidden": 0,
            "source": 14,
            "target": 19
        },
        {
            "edge_type": 5,
            "hidden": 0,
            "source": 15,
            "target": 14
        },
        {
            "edge_type": 0,
            "hidden": 0,
            "source": 15,
            "target": 26
        },
        {
            "edge_type": 5,
            "hidden": 0,
            "source": 16,
            "target": 14
        },
        {
            "edge_type": 0,
            "hidden": 0,
            "source": 16,
            "target": 21
        },
        {
            "edge_type": 5,
            "hidden": 0,
            "source": 17,
            "target": 14
        },
        {
            "edge_type": 0,
            "hidden": 0,
            "source": 17,
            "target": 22
        },
        {
            "edge_type": 5,
            "hidden": 0,
            "source": 18,
            "target": 14
        },
        {
            "edge_type": 0,
            "hidden": 0,
            "source": 18,
            "target": 20
        },
        {
            "edge_type": 3,
            "hidden": 0,
            "source": 19,
            "target": 27
        },
        {
            "edge_type": 3,
            "hidden": 0,
            "source": 20,
            "target": 27
        },
        {
            "edge_type": 3,
            "hidden": 0,
            "source": 21,
            "target": 27
        },
        {
            "edge_type": 3,
            "hidden": 0,
            "source": 22,
            "target": 27
        },
        {
            "edge_type": 3,
            "hidden": 0,
            "source": 23,
            "target": 27
        },
        {
            "edge_type": 3,
            "hidden": 0,
            "source": 24,
            "target": 27
        },
        {
            "edge_type": 3,
            "hidden": 0,
            "source": 25,
            "target": 27
        },
        {
            "edge_type": 3,
            "hidden": 0,
            "source": 26,
            "target": 27
        }
    ],
    "files": {
        "/home/fjin/gitRepo/dataracebench/micro-benchmarks/DRB125-single-orig-no.c": "/*\n!!!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~!!!\n!!! Copyright (c) 2017-20, Lawrence Livermore National Security, LLC\n!!! and DataRaceBench project contributors. See the DataRaceBench/COPYRIGHT file for details.\n!!!\n!!! SPDX-License-Identifier: (BSD-3-Clause)\n!!!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~!!!\n*/\n\n\n/*\nThis example is derived from an example by Simone Atzeni, NVIDIA.\n\nDescription: Race on variable init if used master construct. The variable is written by the\nmaster thread and concurrently read by the others.\n\nSolution: master construct does not have an implicit barrier better\nuse single at line 31. Fixed version for DRB124-master-orig-yes.c. No data race.\n*/\n\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdio.h>\n\nint main (int argc, char **argv)\n{\n  int init, local;\n\n  #pragma omp parallel shared(init) private(local)\n  {\n    #pragma omp single\n    {\n    init = 10;\n    }\n    local = init;\n  }\n\n  return 0;\n}\n\n\n"
    },
    "nodes": [
        {
            "active": 1,
            "end_event": 0,
            "has_race": false,
            "hidden": 0,
            "id": 1,
            "ontarget": false,
            "stack": "file: /home/fjin/gitRepo/dataracebench/micro-benchmarks/DRB125-single-orig-no.c, line: 29, col: 3"
        },
        {
            "active": 1,
            "end_event": 1,
            "has_race": false,
            "hidden": 0,
            "id": 2,
            "ontarget": false,
            "stack": "file: /home/fjin/gitRepo/dataracebench/micro-benchmarks/DRB125-single-orig-no.c, line: 29, col: 3"
        },
        {
            "active": 1,
            "end_event": 3,
            "has_race": false,
            "hidden": 0,
            "id": 3,
            "ontarget": false,
            "stack": ""
        },
        {
            "active": 1,
            "end_event": 3,
            "has_race": false,
            "hidden": 0,
            "id": 4,
            "ontarget": false,
            "stack": ""
        },
        {
            "active": 1,
            "end_event": 3,
            "has_race": false,
            "hidden": 0,
            "id": 5,
            "ontarget": false,
            "stack": ""
        },
        {
            "active": 1,
            "end_event": 3,
            "has_race": false,
            "hidden": 0,
            "id": 6,
            "ontarget": false,
            "stack": ""
        },
        {
            "active": 1,
            "end_event": 3,
            "has_race": false,
            "hidden": 0,
            "id": 7,
            "ontarget": false,
            "stack": ""
        },
        {
            "active": 1,
            "end_event": 3,
            "has_race": false,
            "hidden": 0,
            "id": 8,
            "ontarget": false,
            "stack": ""
        },
        {
            "active": 1,
            "end_event": 3,
            "has_race": false,
            "hidden": 0,
            "id": 9,
            "ontarget": false,
            "stack": ""
        },
        {
            "active": 1,
            "end_event": 3,
            "has_race": false,
            "hidden": 0,
            "id": 10,
            "ontarget": false,
            "stack": ""
        },
        {
            "active": 1,
            "end_event": 3,
            "has_race": false,
            "hidden": 0,
            "id": 11,
            "ontarget": false,
            "stack": ""
        },
        {
            "active": 1,
            "end_event": 3,
            "has_race": false,
            "hidden": 0,
            "id": 12,
            "ontarget": false,
            "stack": ""
        },
        {
            "active": 1,
            "end_event": 3,
            "has_race": false,
            "hidden": 0,
            "id": 13,
            "ontarget": false,
            "stack": ""
        },
        {
            "active": 1,
            "end_event": 3,
            "has_race": false,
            "hidden": 0,
            "id": 14,
            "ontarget": false,
            "stack": ""
        },
        {
            "active": 1,
            "end_event": 3,
            "has_race": false,
            "hidden": 0,
            "id": 15,
            "ontarget": false,
            "stack": ""
        },
        {
            "active": 1,
            "end_event": 3,
            "has_race": false,
            "hidden": 0,
            "id": 16,
            "ontarget": false,
            "stack": ""
        },
        {
            "active": 1,
            "end_event": 3,
            "has_race": false,
            "hidden": 0,
            "id": 17,
            "ontarget": false,
            "stack": ""
        },
        {
            "active": 1,
            "end_event": 3,
            "has_race": false,
            "hidden": 0,
            "id": 18,
            "ontarget": false,
            "stack": ""
        },
        {
            "active": 1,
            "end_event": 4,
            "has_race": false,
            "hidden": 0,
            "id": 19,
            "ontarget": false,
            "stack": ""
        },
        {
            "active": 1,
            "end_event": 4,
            "has_race": false,
            "hidden": 0,
            "id": 20,
            "ontarget": false,
            "stack": ""
        },
        {
            "active": 1,
            "end_event": 4,
            "has_race": false,
            "hidden": 0,
            "id": 21,
            "ontarget": false,
            "stack": ""
        },
        {
            "active": 1,
            "end_event": 4,
            "has_race": false,
            "hidden": 0,
            "id": 22,
            "ontarget": false,
            "stack": ""
        },
        {
            "active": 1,
            "end_event": 4,
            "has_race": false,
            "hidden": 0,
            "id": 23,
            "ontarget": false,
            "stack": ""
        },
        {
            "active": 1,
            "end_event": 4,
            "has_race": false,
            "hidden": 0,
            "id": 24,
            "ontarget": false,
            "stack": ""
        },
        {
            "active": 1,
            "end_event": 4,
            "has_race": false,
            "hidden": 0,
            "id": 25,
            "ontarget": false,
            "stack": ""
        },
        {
            "active": 1,
            "end_event": 4,
            "has_race": false,
            "hidden": 0,
            "id": 26,
            "ontarget": false,
            "stack": ""
        },
        {
            "active": 1,
            "end_event": 2,
            "has_race": false,
            "hidden": 0,
            "id": 27,
            "ontarget": false,
            "stack": ""
        }
    ],
    "races": null,
    "targets": null
}