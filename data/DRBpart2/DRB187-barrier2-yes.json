{
    "edges": [
        {
            "edge_type": 0,
            "hidden": 0,
            "source": 1,
            "target": 2
        },
        {
            "edge_type": 1,
            "hidden": 0,
            "source": 1,
            "target": 3
        },
        {
            "edge_type": 1,
            "hidden": 0,
            "source": 1,
            "target": 4
        },
        {
            "edge_type": 0,
            "hidden": 0,
            "source": 2,
            "target": 11
        },
        {
            "edge_type": 0,
            "hidden": 0,
            "source": 3,
            "target": 6
        },
        {
            "edge_type": 0,
            "hidden": 0,
            "source": 4,
            "target": 5
        },
        {
            "edge_type": 5,
            "hidden": 0,
            "source": 5,
            "target": 6
        },
        {
            "edge_type": 0,
            "hidden": 0,
            "source": 5,
            "target": 8
        },
        {
            "edge_type": 0,
            "hidden": 0,
            "source": 6,
            "target": 7
        },
        {
            "edge_type": 0,
            "hidden": 0,
            "source": 7,
            "target": 9
        },
        {
            "edge_type": 5,
            "hidden": 0,
            "source": 8,
            "target": 7
        },
        {
            "edge_type": 0,
            "hidden": 0,
            "source": 8,
            "target": 10
        },
        {
            "edge_type": 3,
            "hidden": 0,
            "source": 9,
            "target": 11
        },
        {
            "edge_type": 3,
            "hidden": 0,
            "source": 10,
            "target": 11
        }
    ],
    "files": {
        "/home/fjin/playground/dataracebench/micro-benchmarks/DRB187-barrier2-yes.c": "/*\n!!!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~!!!\n!!! Copyright (c) 2017-20, Lawrence Livermore National Security, LLC\n!!! and DataRaceBench project contributors. See the DataRaceBench/COPYRIGHT file for details.\n!!!\n!!! SPDX-License-Identifier: (BSD-3-Clause)\n!!!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~!!!\n */\n\n/*\n * This is a program based on a dataset contributed by\n * Wenhao Wu and Stephen F. Siegel @Univ. of Delaware.\n\n * not a barrier.  either thread can exit before the other thread\n * enters.  So race on x can occur.\n * Data race pair: x@39:7:W vs. x@51:7:W\n */\n\n#include <stdio.h>\n#include <omp.h>\n#include <assert.h>\n\nomp_lock_t l0, l1;\nint x = 1;\n\nint main()\n{\n  omp_init_lock(&l0);\n  omp_init_lock(&l1);\n#pragma omp parallel num_threads(2)\n  {\n    int tid = omp_get_thread_num();\n    if (tid == 0)\n      omp_set_lock(&l0);\n    else if (tid == 1)\n      omp_set_lock(&l1);\n#pragma omp barrier\n    if (tid == 0)\n      x = 0;\n    if (tid == 0)\n    {\n      omp_unset_lock(&l0);\n      omp_set_lock(&l0);\n    }\n    else if (tid == 1)\n    {\n      omp_unset_lock(&l1);\n      omp_set_lock(&l1);\n    }\n    if (tid == 1)\n      x = 1;\n#pragma omp barrier\n    if (tid == 0)\n      omp_unset_lock(&l1);\n    else if (tid == 1)\n      omp_unset_lock(&l0);\n  } // end of parallel construct\n  omp_destroy_lock(&l0);\n  omp_destroy_lock(&l1);\n  printf(\"Done: x=%d\\n\", x);\n}\n"
    },
    "nodes": [
        {
            "active": 1,
            "end_event": 0,
            "has_race": false,
            "hidden": 0,
            "id": 1,
            "ontarget": false,
            "stack": "file: /home/fjin/playground/dataracebench/micro-benchmarks/DRB187-barrier2-yes.c, line: 30, col: 1"
        },
        {
            "active": 1,
            "end_event": 1,
            "has_race": false,
            "hidden": 0,
            "id": 2,
            "ontarget": false,
            "stack": "file: /home/fjin/playground/dataracebench/micro-benchmarks/DRB187-barrier2-yes.c, line: 30, col: 1"
        },
        {
            "active": 1,
            "end_event": 3,
            "has_race": false,
            "hidden": 0,
            "id": 3,
            "ontarget": false,
            "stack": ""
        },
        {
            "active": 1,
            "end_event": 3,
            "has_race": false,
            "hidden": 0,
            "id": 4,
            "ontarget": false,
            "stack": ""
        },
        {
            "active": 1,
            "end_event": 3,
            "has_race": false,
            "hidden": 0,
            "id": 5,
            "ontarget": false,
            "stack": ""
        },
        {
            "active": 1,
            "end_event": 3,
            "has_race": false,
            "hidden": 0,
            "id": 6,
            "ontarget": false,
            "stack": ""
        },
        {
            "active": 1,
            "end_event": 3,
            "has_race": false,
            "hidden": 0,
            "id": 7,
            "ontarget": false,
            "stack": ""
        },
        {
            "active": 1,
            "end_event": 3,
            "has_race": false,
            "hidden": 0,
            "id": 8,
            "ontarget": false,
            "stack": ""
        },
        {
            "active": 1,
            "end_event": 4,
            "has_race": false,
            "hidden": 0,
            "id": 9,
            "ontarget": false,
            "stack": ""
        },
        {
            "active": 1,
            "end_event": 4,
            "has_race": false,
            "hidden": 0,
            "id": 10,
            "ontarget": false,
            "stack": ""
        },
        {
            "active": 1,
            "end_event": 2,
            "has_race": false,
            "hidden": 0,
            "id": 11,
            "ontarget": false,
            "stack": ""
        }
    ],
    "races": null,
    "targets": null
}