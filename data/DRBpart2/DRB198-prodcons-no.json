{
    "edges": [
        {
            "edge_type": 0,
            "hidden": 0,
            "source": 1,
            "target": 2
        },
        {
            "edge_type": 1,
            "hidden": 0,
            "source": 1,
            "target": 3
        },
        {
            "edge_type": 1,
            "hidden": 0,
            "source": 1,
            "target": 4
        },
        {
            "edge_type": 1,
            "hidden": 0,
            "source": 1,
            "target": 5
        },
        {
            "edge_type": 1,
            "hidden": 0,
            "source": 1,
            "target": 6
        },
        {
            "edge_type": 1,
            "hidden": 0,
            "source": 1,
            "target": 7
        },
        {
            "edge_type": 1,
            "hidden": 0,
            "source": 1,
            "target": 8
        },
        {
            "edge_type": 1,
            "hidden": 0,
            "source": 1,
            "target": 9
        },
        {
            "edge_type": 1,
            "hidden": 0,
            "source": 1,
            "target": 10
        },
        {
            "edge_type": 0,
            "hidden": 0,
            "source": 2,
            "target": 19
        },
        {
            "edge_type": 0,
            "hidden": 0,
            "source": 3,
            "target": 17
        },
        {
            "edge_type": 0,
            "hidden": 0,
            "source": 4,
            "target": 16
        },
        {
            "edge_type": 0,
            "hidden": 0,
            "source": 5,
            "target": 15
        },
        {
            "edge_type": 0,
            "hidden": 0,
            "source": 6,
            "target": 18
        },
        {
            "edge_type": 0,
            "hidden": 0,
            "source": 7,
            "target": 14
        },
        {
            "edge_type": 0,
            "hidden": 0,
            "source": 8,
            "target": 13
        },
        {
            "edge_type": 0,
            "hidden": 0,
            "source": 9,
            "target": 11
        },
        {
            "edge_type": 0,
            "hidden": 0,
            "source": 10,
            "target": 12
        },
        {
            "edge_type": 3,
            "hidden": 0,
            "source": 11,
            "target": 19
        },
        {
            "edge_type": 3,
            "hidden": 0,
            "source": 12,
            "target": 19
        },
        {
            "edge_type": 3,
            "hidden": 0,
            "source": 13,
            "target": 19
        },
        {
            "edge_type": 3,
            "hidden": 0,
            "source": 14,
            "target": 19
        },
        {
            "edge_type": 3,
            "hidden": 0,
            "source": 15,
            "target": 19
        },
        {
            "edge_type": 3,
            "hidden": 0,
            "source": 16,
            "target": 19
        },
        {
            "edge_type": 3,
            "hidden": 0,
            "source": 17,
            "target": 19
        },
        {
            "edge_type": 3,
            "hidden": 0,
            "source": 18,
            "target": 19
        }
    ],
    "files": {
        "/home/fjin/playground/dataracebench/micro-benchmarks/DRB198-prodcons-no.c": "/*\n!!!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~!!!\n!!! Copyright (c) 2017-20, Lawrence Livermore National Security, LLC\n!!! and DataRaceBench project contributors. See the DataRaceBench/COPYRIGHT file for details.\n!!!\n!!! SPDX-License-Identifier: (BSD-3-Clause)\n!!!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~!!!\n */\n\n/*\n * This is a program based on a dataset contributed by\n * Wenhao Wu and Stephen F. Siegel @Univ. of Delaware.\n\n * no race\n */\n\n#include <stdio.h>\nint nprod = 4, ncons = 4;\nint cap = 5, size = 0, packages = 1000;\nint main()\n{\n  int nthread = nprod + ncons;\n#pragma omp parallel for shared(size, cap, nprod, ncons, nthread) firstprivate(packages) num_threads(nthread)\n  for (int i = 0; i < nthread; i++)\n  {\n    if (i < nprod)\n      while (packages)\n      { // I am a producer\n#pragma omp critical\n        if (size < cap)\n        {\n          size++; // produce\n          packages--; // produced a package\n          printf(\"Producer %d produced! size=%d\\n\", i, size);\n          fflush(stdout);\n        }\n      }\n    else\n      while (packages)\n      { // I am a consumer\n#pragma omp critical\n        if (size > 0)\n        {\n          size--; // consume\n          packages--; // consumed a package\n          printf(\"Consumer %d consumed! size=%d\\n\", i - nprod, size);\n          fflush(stdout);\n        }\n      }\n  }\n}\n"
    },
    "nodes": [
        {
            "active": 1,
            "end_event": 0,
            "has_race": false,
            "hidden": 0,
            "id": 1,
            "ontarget": false,
            "stack": "file: /home/fjin/playground/dataracebench/micro-benchmarks/DRB198-prodcons-no.c, line: 23, col: 1"
        },
        {
            "active": 1,
            "end_event": 1,
            "has_race": false,
            "hidden": 0,
            "id": 2,
            "ontarget": false,
            "stack": "file: /home/fjin/playground/dataracebench/micro-benchmarks/DRB198-prodcons-no.c, line: 23, col: 1"
        },
        {
            "active": 1,
            "end_event": 3,
            "has_race": true,
            "hidden": 0,
            "id": 3,
            "ontarget": false,
            "stack": ""
        },
        {
            "active": 1,
            "end_event": 3,
            "has_race": true,
            "hidden": 0,
            "id": 4,
            "ontarget": false,
            "stack": ""
        },
        {
            "active": 1,
            "end_event": 3,
            "has_race": true,
            "hidden": 0,
            "id": 5,
            "ontarget": false,
            "stack": ""
        },
        {
            "active": 1,
            "end_event": 3,
            "has_race": true,
            "hidden": 0,
            "id": 6,
            "ontarget": false,
            "stack": ""
        },
        {
            "active": 1,
            "end_event": 3,
            "has_race": true,
            "hidden": 0,
            "id": 7,
            "ontarget": false,
            "stack": ""
        },
        {
            "active": 1,
            "end_event": 3,
            "has_race": true,
            "hidden": 0,
            "id": 8,
            "ontarget": false,
            "stack": ""
        },
        {
            "active": 1,
            "end_event": 3,
            "has_race": true,
            "hidden": 0,
            "id": 9,
            "ontarget": false,
            "stack": ""
        },
        {
            "active": 1,
            "end_event": 3,
            "has_race": true,
            "hidden": 0,
            "id": 10,
            "ontarget": false,
            "stack": ""
        },
        {
            "active": 1,
            "end_event": 4,
            "has_race": false,
            "hidden": 0,
            "id": 11,
            "ontarget": false,
            "stack": ""
        },
        {
            "active": 1,
            "end_event": 4,
            "has_race": false,
            "hidden": 0,
            "id": 12,
            "ontarget": false,
            "stack": ""
        },
        {
            "active": 1,
            "end_event": 4,
            "has_race": false,
            "hidden": 0,
            "id": 13,
            "ontarget": false,
            "stack": ""
        },
        {
            "active": 1,
            "end_event": 4,
            "has_race": false,
            "hidden": 0,
            "id": 14,
            "ontarget": false,
            "stack": ""
        },
        {
            "active": 1,
            "end_event": 4,
            "has_race": false,
            "hidden": 0,
            "id": 15,
            "ontarget": false,
            "stack": ""
        },
        {
            "active": 1,
            "end_event": 4,
            "has_race": false,
            "hidden": 0,
            "id": 16,
            "ontarget": false,
            "stack": ""
        },
        {
            "active": 1,
            "end_event": 4,
            "has_race": false,
            "hidden": 0,
            "id": 17,
            "ontarget": false,
            "stack": ""
        },
        {
            "active": 1,
            "end_event": 4,
            "has_race": false,
            "hidden": 0,
            "id": 18,
            "ontarget": false,
            "stack": ""
        },
        {
            "active": 1,
            "end_event": 2,
            "has_race": false,
            "hidden": 0,
            "id": 19,
            "ontarget": false,
            "stack": ""
        }
    ],
    "races": [
        {
            "current": 3,
            "current_stack": "/home/fjin/playground/dataracebench/micro-benchmarks/DRB198-prodcons-no.c:30:",
            "lca": 0,
            "prev": 4,
            "prev_stack": ""
        },
        {
            "current": 5,
            "current_stack": "/home/fjin/playground/dataracebench/micro-benchmarks/DRB198-prodcons-no.c:30:",
            "lca": 0,
            "prev": 4,
            "prev_stack": ""
        },
        {
            "current": 6,
            "current_stack": "/home/fjin/playground/dataracebench/micro-benchmarks/DRB198-prodcons-no.c:30:",
            "lca": 0,
            "prev": 4,
            "prev_stack": ""
        },
        {
            "current": 7,
            "current_stack": "/home/fjin/playground/dataracebench/micro-benchmarks/DRB198-prodcons-no.c:42:",
            "lca": 0,
            "prev": 4,
            "prev_stack": ""
        },
        {
            "current": 8,
            "current_stack": "/home/fjin/playground/dataracebench/micro-benchmarks/DRB198-prodcons-no.c:42:",
            "lca": 0,
            "prev": 4,
            "prev_stack": ""
        },
        {
            "current": 9,
            "current_stack": "/home/fjin/playground/dataracebench/micro-benchmarks/DRB198-prodcons-no.c:42:",
            "lca": 0,
            "prev": 4,
            "prev_stack": ""
        },
        {
            "current": 10,
            "current_stack": "/home/fjin/playground/dataracebench/micro-benchmarks/DRB198-prodcons-no.c:42:",
            "lca": 0,
            "prev": 4,
            "prev_stack": ""
        }
    ],
    "targets": null
}